// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	pgxscan "github.com/georgysavva/scany/v2/pgxscan"
)

// IScanner is an autogenerated mock type for the IScanner type
type IScanner struct {
	mock.Mock
}

// Select provides a mock function with given fields: ctx, db, dst, query, args
func (_m *IScanner) Select(ctx context.Context, db pgxscan.Querier, dst interface{}, query string, args ...interface{}) error {
	var _ca []interface{}
	_ca = append(_ca, ctx, db, dst, query)
	_ca = append(_ca, args...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for Select")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, pgxscan.Querier, interface{}, string, ...interface{}) error); ok {
		r0 = rf(ctx, db, dst, query, args...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIScanner creates a new instance of IScanner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIScanner(t interface {
	mock.TestingT
	Cleanup(func())
}) *IScanner {
	mock := &IScanner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
